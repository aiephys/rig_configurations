# This configuration file defines a set of simulated devices that allow some 
# of ACQ4's acquisition capabilities to be tested on any machine. 
# 
# Also included are example configuration for every type of device supported
# by ACQ4, commented out. These may be used to construct a working 
# device configuration file.



# First, define the NI DAQ device we will use. For use with a real DAQ, simply
# remove the line 'mock: True'. The name 'DAQ', defined here, will appear
# many times throughout the config to refer to this device.
DAQ:
    driver: 'NiDAQ'
    # mock: True
    # Default mode for AI channels. Options are 'NRSE', 'RSE', and 'DIFF'
    # This may be overridden for individual channels.
    defaultAIMode: 'RSE'
    #defaultAIRange: [0, 5.0]
    #defaultAORange: [0, 5.0]


# A simple device connected to the DAQ that uses one AI channel and one AO 
# channel. As with all of the following device definitions, the name 
# 'DaqDevice' is arbitrary.
#DaqDevice:
#    driver: 'DAQGeneric'
#    channels:
#        AIChan:
#            device: 'DAQ'
#            channel: '/Dev1/ai0'
#            type: 'ai'
#        AOChan:
#            device: 'DAQ'
#            channel: '/Dev1/ao0'
#            type: 'ao'



XKE128:
   driver: 'XKeys'
   index: 0

# FilterWheel:
#     driver: 'ThorlabsMFC1'
#     port: 'COM37'
#     scale: 1.0, 1.0, 1.0



# VibrationSensor:
#     driver: 'DAQGeneric'
#     channels:
#         Sensor:
#             device: 'DAQ'
#             channel: '/Dev1/ai19'
#             type: 'ai'
#             mode: 'NRSE'


# LEDChannels:
#     driver: 'DAQGeneric'
#     channels:
#         LED1:
#             device: 'DAQ'
#             channel: '/Dev1/line8'
#             type: 'do'
#         LED2:
#             device: 'DAQ'
#             channel: '/Dev1/line9'
#             type: 'do'

LEDChannels:
    driver: 'DAQGeneric'
    channels:
        470:
            device: 'DAQ'
            channel: '/Dev1/ao2'
            units: 'A'
            scale: (1*V) / (200*mA)
            type: 'ao'
        490:
            device: 'DAQ'
            channel: '/Dev1/ao3'
            units: 'A'
            scale: (1*V) / (200*mA)
            type: 'ao'
        565:
            device: 'DAQ'
            channel: '/Dev1/ao3'
            units: 'A'
            scale: (1*V) / (200*mA)
            type: 'ao'
        595:
            device: 'DAQ'
            channel: '/Dev1/ao3'
            units: 'A'
            scale: (1*V) / (200*mA)
            type: 'ao'
        617:
            device: 'DAQ'
            channel: '/Dev1/ao2'
            units: 'A'
            scale: (1*V) / (200*mA)
            type: 'ao'

# this device lets us refer to LEDs by function rather than wavelength, since 
# we frequently change wavelengths depending on the GEVI/opsin in use
GEVI_LEDs:
    driver: 'DAQGeneric'
    channels:
        imaging:
            device: 'DAQ'
            channel: '/Dev1/ao3'
            units: 'A'
            scale: (1*V) / (200*mA)
            type: 'ao'
        photostim:
            device: 'DAQ'
            channel: '/Dev1/ao2'
            units: 'A'
            scale: (1*V) / (200*mA)
            type: 'ao'


LEDs:
    driver: 'LEDLightSource'
    leds:
        blue:
            channel: 'LEDChannels', '470'
            model: 'Thorlabs M470L2'
            wavelength: 470*nm
            xkey: 'XKE128', 7, 11
            onValue: 7 * mA
        # blue:
        #     channel: 'LEDChannels', '490'
        #     model: 'Thorlabs M490L3'
        #     wavelength: 490*nm
        #     xkey: 'XKE128', 7, 12
        #     onValue: 100 * mA
        # green:
        #     channel: 'LEDChannels', '565'
        #     model: 'Thorlabs M565L3'
        #     wavelength: 565*nm
        #     xkey: 'XKE128', 7, 13
        #     onValue: 50 * mA
        amber:
            channel: 'LEDChannels', '595'
            model: 'Thorlabs M595L3'
            wavelength: 595*nm
            xkey: 'XKE128', 7, 13
            onValue: 50 * mA
        orange:
            channel: 'LEDChannels', '617'
            model: 'Thorlabs M617L3'
            wavelength: 617*nm
            xkey: 'XKE128', 7, 14
            onValue: 50 * mA


SliceScope:
    driver: 'Scientifica'
    name: 'SliceScope'
    baudrate: 38400
    calibrationImagingDevice: 'Camera'
    scale: -1e-6, -1e-6, 1e-6  # convert um to m
    params:
        currents: 200, 125  # be careful to follow manufacturer specs!
        axisScale: 5.12, -5.12, -6.4  # +x points right, +y points away, +z points up
        joyDirectionX: True
        joyDirectionY: True
        joyDirectionZ: False
        minSpeed: 1000
        maxSpeed: 40000
        accel: 100
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500


# SliceScope:
#     driver: 'MicroManagerStage'
#     scale: -1e-6, -1e-6, 1e-6
#     xyStage:
#         mmAdapterName: 'Scientifica'
#         mmDeviceName: 'XYStage'
#         serial:
#             port: 'COM22'
#             baud: 9600
#     zStage:
#         mmAdapterName: 'Scientifica'
#         mmDeviceName: 'ZStage'
#         serial:
#             port: 'shared'  # Uses the same serial device as xy stage

Condenser:
    driver: 'Scientifica'
    name: 'Condenser'
    baudrate: 38400
    scale: -1e-6, -1e-6, 1e-6  # convert um to m
    params:
        #currents: 200, 125  # be careful to follow manufacturer specs!
        #axisScale: 5.12, -5.12, -6.4  # +x points right, +y points away, +z points up
        #joyDirectionX: True
        #joyDirectionY: True
        #joyDirectionZ: False
        minSpeed: 1000
        maxSpeed: 30000
        accel: 500
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500


MOC:
    driver: 'StageSwitch'
    switches:
        # Emit a signal when MOC switches position (x axis crosses position thresholds)
        objective: 
            device: 'Condenser'
            0: ([-44000, None], None, None)  # x values > 44000 are position 0
            1: ([None, -44500], None, None)   # x values < -44500 are position 1


# A microscope device, providing a way to inform ACQ4 about the set of 
# objective lenses available and which is currently in use. 
Microscope:
    driver: 'Microscope'
    parentDevice: 'SliceScope'
    # lightSource: 'LEDs'
    objectiveSwitch: 'MOC', 'objective'
    objectives:
        0:
            40x_0.8:
                name: '40x 0.8NA LUMPlanFL N'
                scale: 1.0 / 40.0
                offset: 0, 0, 0
            20x_0.5:
                name: '20x 0.5NA UMPlanFL N'
                scale: 1.0 / 20.0
                offset: 0, 0, 0
            60x_1.0:
                name: '60x 1.0NA LUMPlanFL N'
                scale: 1.0 / 60.0
                offset: 0, 0, 0
        1:
            5x_0.1NA:
                name: '5x 0.1NA MPlan N'
                scale: 1.0 / 5.0
                offset: 27*um, -245*um, -7.45*mm


MultiBand_FilterCube:
    driver: "FilterSet"
    ports:
        excitation:
            0:
                model: "Semrock FF409/493/573/652-Di01 (reflected)"
        emission:
            0:
                model: "Semrock FF409/493/573/652-Di01 (transmitted)"
            1:
                model: "Semrock FF01-432/515/595/730"


EGFP_FilterCube:
    driver: "FilterSet"
    ports:
        # note: order of filters always starts with closest-to-sample, regardless of
        # whether this is an excitation or emission path
        excitation:  
            0:
                model: "Semrock FF506-Di03 (reflected)"
                passBands: [(None, 505*nm)]  # reflects wavelengths < 505 nm
            1:
                model: "Semrock FF02-485/20"
                passBands: [(473*nm, 498*nm)]  # transmits 473-498 nm
        emission:
            0:
                model: "Semrock FF506-Di03 (transmitted)"
                passBands: [(505, None)]  # transmits wavelengths > 505 nm
            1:
                model: "Semrock FF01-524/24"
                passBands: [(510*nm, 540*nm)]  # transmits 510-540 nm


UV_FilterCube:
    driver: "FilterSet"
    ports:
        excitation:  # note: order of filters always starts with closest-to-sample
            0:
                model: "Semrock FF414-Di01 (reflected)"
            1:
                model: "Semrock FF01-389/38"
        emission:
            0:
                model: "Semrock FF414-Di01 (transmitted)"
            1:
                model: "Semrock FF01-433/24"


TxRed_FilterCube:
    driver: "FilterSet"
    ports:
        excitation:  # note: order of filters always starts with closest-to-sample
            0:
                model: "Semrock FF593-Di03 (reflected)"
            1:
                model: "Semrock FF01-562/40"
        emission:
            0:
                model: "Semrock FF593-Di03 (transmitted)"
            1:
                model: "Semrock FF01-624/40"


Arch_FilterCube:
    driver: "FilterSet"
    ports:
        excitation:  # note: order of filters always starts with closest-to-sample
            0:
                model: "Semrock Di02-R635 (reflected)"
            1:
                model: "Semrock FF01-623/32"
        emission:
            0:
                model: "Semrock Di02-R635 (transmitted)"
            1:
                model: "Semrock FF01-731/137"


JF585_FilterCube:
    driver: "FilterSet"
    ports:
        excitation:  # note: order of filters always starts with closest-to-sample
            0:
                model: "Semrock Di02-R532 (reflected)"
            1:
                model: "Semrock FF01-503/40"
        emission:
            0:
                model: "Semrock Di02-R532 (transmitted)"
            1:
                model: "Semrock FF01-562/40"


JF525_FilterCube:
    driver: "FilterSet"
    ports:
        excitation:  # note: order of filters always starts with closest-to-sample
            0:
                model: "Semrock FF624/Di01 (reflected)"
            1:
                model: "Semrock FF01-598/25"
        emission:
            0:
                model: "Semrock FF624/Di01 (transmitted)"
            1:
                model: "Semrock FF01-650/54"


FilterTurret:
    driver: "FalconTurret"
    parentDevice: "Microscope"
    initialSlot: 0
    slots:
        0: 
            name: "Multi-band"
            device: "MultiBand_FilterCube"
            hotkey:
                device: "XKE128"
                key: (6, 15)
        1: 
            name: "EGFP"
            device: "EGFP_FilterCube"
            hotkey:
                device: "XKE128"
                key: (6, 11)
        2:
            name: "UV"
            device: "UV_FilterCube"
            hotkey:
                device: "XKE128"
                key: (6, 10)
        3: 
            # name: "TxRed"
            # device: "TxRed_FilterCube"
            name: "Arch"
            device: "Arch_FilterCube"
            hotkey:
                device: "XKE128"
                key: (6, 14)
        4: 
            name: "Voltron-JF585"
            device: "JF585_FilterCube"
            hotkey:
                device: "XKE128"
                key: (6, 13)
        5: 
            name: "Voltron-JF525"
            device: "JF525_FilterCube"
            hotkey:
                device: "XKE128"
                key: (6, 12)
# Scanner:
#    driver: 'Scanner'
#    parentDevice: 'Microscope'
#    XAxis:
#        device: 'DAQ'
#        channel: '/Dev1/ao2'
#        type: 'ao'
#    YAxis:
#        device: 'DAQ'
#        channel: '/Dev1/ao3'
#        type: 'ao'
#    defaultCamera: "Camera"
#    defaultLaser: "Laser"
#    commandLimits: -2, 2 

# Scanner-raw:
#    driver: 'DAQGeneric'
#    channels:
#        XAxis:
#            device: 'DAQ'
#            channel: '/Dev1/ao2'
#            type: 'ao'
#        YAxis:
#            device: 'DAQ'
#            channel: '/Dev1/ao3'
#            type: 'ao'

# Laser-450:
#     driver: 'Laser'
#     parentDevice: 'Microscope'
#     #power: 100*mW
#     shutter:
#         device: 'DAQ'
#         channel: '/Dev1/line1'           ## channel for triggering shutter
#         type: 'do'
#         delay: 3*ms                      ## how long it takes the shutter to fully open
#     wavelength: 450*nm
#     alignmentMode:
#         shutter: True
#     powerIndicator: 
#         channel: 'LaserPhotodiode', 'photodiode'      ## photocell channel for immediate recalibration
#         rate: 1*MHz                     ## sample rate to use when measuring power


# LaserPhotodiode:
#     driver: 'DAQGeneric'
#     channels:
#         photodiode:
#             device: 'DAQ'
#             channel: '/Dev1/ai7'
#             type: 'ai'
#             scale: (100 * uW) / (30 * mV)  # measured at sample plane; calibrated 2017.08.23
#             units: 'W'
#             settlingTime: 5*ms      # How long to wait before starting power measurement
#             measurementTime: 10*ms  # Duration to be averaged together for power measurement


# Laser-450-raw:
#     driver: 'DAQGeneric'
#     channels:
#         shutter:
#             device: 'DAQ'
#             channel: '/Dev1/line1'           ## channel for triggering shutter
#             type: 'do'
#             delay: 1*ms                      ## how long it takes the shutter to fully open
#         attenuator:
#             device: 'DAQ'
#             channel: '/Dev1/ao1'
#             type: 'ao'
#             delay: 1*ms
#         photodiode:
#             device: 'DAQ'
#             channel: '/Dev1/ai7'
#             type: 'ai'
#             scale: (100 * uW) / (30 * mV)  # calibrated 2017.08.23
#             units: 'W'

# PowerMeter:
#     driver: 'DAQGeneric'
#     channels:
#         meter:
#             device: 'DAQ'
#             channel: '/Dev1/ai4'
#             type: 'ai'
#             scale: 42 * uW / (0.016 - -0.007) * V  # power meter reads 42 uW, steps from -7mv to +16mV when laser is on
#             offset: 1.78 * V
#             units: 'W'
#             mode: 'NRSE'  # battery-operated


# PMT:
#     driver: 'DAQGeneric'
#     channels:
#         detector:
#             device: 'DAQ'
#             channel: '/Dev1/ai5'
#             type: 'ai'


#PockelsCell:
#    driver: 'DAQGeneric'
#    channels:
#        Switch:
#            device: 'DAQ'
#            channel: '/Dev1/ao1'
#            type: 'ao'


Clamp1:
    driver: 'MultiClamp'
    #pythonExecutable: 'c:\\Anaconda2-32\\python.exe'
    #dllPath: "C:\\Program Files (x86)\\Molecular Devices\\MultiClamp 700B Commander\\3rd Party Support\\AxMultiClampMsg\\AxMultiClampMsg.dll"
    # pythonExecutable: "C:\\Anaconda2-64\\python.exe"
    dllPath: "C:\\Program Files\\Molecular Devices\\MultiClamp 700B Commander\\3rd Party Support\\AxMultiClampMsg\\AxMultiClampMsg.dll"
    channelID: 'model:MC700B,sn:00834380,chan:1'
    commandChannel: 
        device: 'DAQ'
        channel: '/Dev1/ao0'
        type: 'ao'
    primaryChannel: 
        device: 'DAQ'
        channel: '/Dev1/ai0'
        mode: 'RSE'
        type: 'ai'
    secondaryChannel: 
       device: 'DAQ'
       channel: '/Dev1/ai1'
       mode: 'RSE'
       type: 'ai'
    vcHolding: -70e-3
    icHolding: 0.0


Clamp2:
    driver: 'MultiClamp'
    #pythonExecutable: 'c:\\Anaconda2-32\\python.exe'
    #dllPath: "C:\\Program Files (x86)\\Molecular Devices\\MultiClamp 700B Commander\\3rd Party Support\\AxMultiClampMsg\\AxMultiClampMsg.dll"
    # pythonExecutable: "C:\\Anaconda2-64\\python.exe"
    dllPath: "C:\\Program Files\\Molecular Devices\\MultiClamp 700B Commander\\3rd Party Support\\AxMultiClampMsg\\AxMultiClampMsg.dll"
    channelID: 'model:MC700B,sn:00834380,chan:2'
    commandChannel: 
        device: 'DAQ'
        channel: '/Dev1/ao1'
        type: 'ao'
    primaryChannel: 
        device: 'DAQ'
        channel: '/Dev1/ai2'
        mode: 'RSE'
        type: 'ai'
    secondaryChannel: 
       device: 'DAQ'
       channel: '/Dev1/ai3'
       mode: 'RSE'
       type: 'ai'
    vcHolding: -70e-3
    icHolding: 0.0


Pressure1:
    driver: 'DAQGeneric'
    channels:
        pressure_out:
            device: 'DAQ'
            channel: '/Pressure3and4/ao0'
            type: 'ao'
            units: 'Pa'
            scale: 0.5 * V / (6894.76 * Pa) # 0.5 V/PSI
            offset: -5.057 # V
        pressure_in:
            device: 'DAQ'
            channel: '/Pressure3and4/ai0'
            type: 'ai'
            units: 'Pa'
            scale: 2.0 * (6894.76 * Pa) / V # 2 PSI / V
        regulator_valve:
            device: 'DAQ'
            channel: '/Pressure3and4/line0'
            type: 'do'
        user_valve:
            device: 'DAQ'
            channel: '/Pressure3and4/line1'
            type: 'do'


Pressure2:
    driver: 'DAQGeneric'
    channels:
        pressure_out:
            device: 'DAQ'
            channel: '/Pressure9and10/ao1'
            type: 'ao'
            units: 'Pa'
            scale: 0.5 * V / (6894.76 * Pa) # 0.5 V/PSI
            offset: -5.024 # V
        pressure_in:
            device: 'DAQ'
            channel: '/Pressure9and10/ai1'
            type: 'ai'
            units: 'Pa'
            scale: 2.0 * (6894.76 * Pa) / V # 2 PSI / V
        regulator_valve:
            device: 'DAQ'
            channel: '/Pressure9and10/line2'
            type: 'do'
        user_valve:
            device: 'DAQ'
            channel: '/Pressure9and10/line3'
            type: 'do'


# TempController:
#     driver: 'DAQGeneric'
#     channels:
#         BathTemp:
#             device: 'DAQ'
#             channel: '/Dev1/ao0'
#             type: 'ao'
#             units: 'V'
#             #scale: 10 * mV / C

# Photometrics Kino (disabled)
#Camera:
#    driver: 'PVCam'
#    serial: 'PMUSBCam00'
#    parentDevice: 'Microscope'          ## tells us that the camera is rigidly connected to the scope, and
#                                        ##   thus will inherit its transformations.
#    transform:                          ## transform defines the relationship between the camera's
#                                        ##   sensor coordinate system (top-left is usually 0,0 and
#                                        ##   pixels are 1 unit wide) and the coordinate system of its
#                                        ##   parentDevice. This is where we would rotate/flip the camera if needed.
#        pos: (0, 0)
#        scale: (4.48 * um/px, -4.48 * um/px)
#        angle: 0
#    params:                             ## default parameters to apply to camera at startup
#        #TEMP_SETPOINT:  -2000
#        exposure: 10e-3
#        binning: 4,4    

# Hamamatsu Orca
# Camera:
#     driver: 'MicroManagerCamera'
#     mmAdapterName: 'HamamatsuHam'
#     mmDeviceName: 'HamamatsuHam_DCAM'
#     parentDevice: 'Microscope'
#     transform:
#         pos: (0, 0)
#         scale: (1.005 * 6.5 * um/px, 1.005* -6.5 * um/px)  # correction 1.005 calibrated under 4x objective 2018.10
#         angle: 0
#     params:                             ## default parameters to apply to camera at startup
#         #TEMP_SETPOINT:  -2000
#         exposure: 30e-3
#         binning: 2,2
#         OUTPUT TRIGGER KIND[0]: "EXPOSURE"
#         OUTPUT TRIGGER POLARITY[0]: "POSITIVE"
#     # exposeChannel:                                 ## Channel for recording expose signal
#     #    device: 'DAQ'
#     #    channel: '/Dev1/port0/line0'
#     #    type: 'di'
#     # triggerOutChannel:             ## Channel the DAQ should trigger off of to sync with camera
#     #     device: 'DAQ'
#     #     channel: '/Dev1/PFI0'
#     #     type: 'di'


Camera:
    driver: 'MicroManagerCamera'
    mmAdapterName: 'HamamatsuHam'
    mmDeviceName: 'HamamatsuHam_DCAM'
    parentDevice: 
        name: 'FilterTurret'
        port: 'emission'
    transform:
        pos: (0, 0)
        scale: (1.005 * 6.5 * um/px, 1.005* -6.5 * um/px)  # correction 1.005 calibrated under 4x objective 2018.10
        angle: 0
    params:                             ## default parameters to apply to camera at startup
        #TEMP_SETPOINT:  -2000
        exposure: 30e-3
        binning: 2,2                                ## Channel for recording expose signal
    #    device: 'DAQ'
    #    channel: '/Dev2/port0/line0'
    #    type: 'di'
        OUTPUT TRIGGER DELAY UNITS: "MILLISECONDS"
        OUTPUT TRIGGER DELAY[1]: 0
        OUTPUT TRIGGER KIND[1]: "PROGRAMABLE"
        OUTPUT TRIGGER PERIOD UNITS: "MILLISECONDS"
        OUTPUT TRIGGER PERIOD[1]: 0.1
        OUTPUT TRIGGER POLARITY[1]: "POSITIVE"
        OUTPUT TRIGGER SOURCE[1]: "VSYNC"
    exposeChannel:                                 ## Channel for recording expose signal
        device: 'DAQ'
        channel: '/Dev1/line0'
        type: 'di'
    #triggerOutChannel: 'DAQ', '/Dev1/PFI5'        ## Channel the DAQ should trigger off of to sync with camera
    triggerInChannel:                              ## Channel the DAQ should raise to trigger the camera
        device: 'DAQ'
        channel: '/Dev1/line1'
        type: 'do'
    hotkeys:
        snap:
            device: 'XKE128'
            key: (4, 15)
    presets:
        full_frame_30ms:
            hotkey: 
                device: 'XKE128'
                key: (5, 15)
            params:
                exposure: 30 * ms
                regionX: 0
                regionY: 0
                regionW: 2048
                regionH: 2048
                binning: (2, 2)
        full_frame_300ms:
            hotkey: 
                device: 'XKE128'
                key: (5, 14)
            params:
                exposure: 300 * ms
                regionX: 0
                regionY: 0
                regionW: 2048
                regionH: 2048
                binning: (4, 4)
        half_frame_30ms:
            hotkey: 
                device: 'XKE128'
                key: (4, 15)
            params:
                exposure: 30 * ms
                regionX: 512
                regionY: 512
                regionW: 1024
                regionH: 1024
                binning: (1, 1)
        half_frame_300ms:
            hotkey: 
                device: 'XKE128'
                key: (4, 14)
            params:
                exposure: 300 * ms
                regionX: 512
                regionY: 512
                regionW: 1024
                regionH: 1024
                binning: (2, 2)
        fast_500Hz:
            hotkey: 
                device: 'XKE128'
                key: (5, 13)
            params:
                exposure: 2 * ms
                regionX: 0
                regionY: 816
                regionW: 2048
                regionH: 416
                binning: (4, 4)


#Pixelfly:
#    driver: 'MicroManagerCamera'
#    mmAdapterName: 'PCO_Camera'
#    mmDeviceName: 'pco_camera'
#    parentDevice: 'Microscope'
#    transform:
#        pos: (0, 0)
#        scale: (6.45 * um/px, -6.45 * um/px)
#        angle: 0

#PatchStar:
#    driver: 'Scientifica'
#    port: 'com109'
#    pitch: 24
#    scale: -1e-6, 1e-6, 1e-6  # convert um to m, +z points up
#    params:
#        #currents: 230, 220  # be careful to follow manufacturer specs!
#        axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
#        joyDirectionX: True
#        joyDirectionY: False
#        joyDirectionZ: True
#        minSpeed: 1000
#        accel: 500
#        joySlowScale: 4
#        joyFastScale: 80
#        joyAccel: 500

#PatchStarPipette:
#    driver: 'Pipette'
#    parentDevice: 'PatchStar'
#    scopeDevice: 'Microscope'
#    searchHeight: 1*mm



# Sensapex1:
#     driver: 'Sensapex'
#     deviceId: 1
#     xPitch: 30
#     scale: 1e-9, 1e-9, -1e-9

# Pipette1:
#     driver: 'Pipette'
#     parentDevice: 'Sensapex1'
#     scopeDevice: 'Microscope'




# Sensapex2:
#     driver: 'Sensapex'
#     deviceId: 2
#     xPitch: 30

# SensapexPipette2:
#     driver: 'Pipette'
#     parentDevice: 'Sensapex2'


# Pressure1:
#     driver: 'DAQGeneric'
#     channels:
#         pressure:
#             device: 'DAQ'
#             channel: '/Pressure1and2/ao0'
#             type: 'ao'
#             holding: 0.0
#             scale: 0.5
#             offset: -5.0
#             units: 'PSI'
#         valveA:
#             device: 'DAQ'
#             channel: '/Pressure1and2/line0'
#             type: 'do'
#         valveB:
#             device: 'DAQ'
#             channel: '/Pressure1and2/line1'
#             type: 'do'


# Pressure2:
#     driver: 'DAQGeneric'
#     channels:
#         pressure:
#             device: 'DAQ'
#             channel: '/Pressure1and2/ao1'
#             type: 'ao'
#             holding: 0.0
#             scale: 0.5
#             offset: -5.0
#             units: 'PSI'
#         valveA:
#             device: 'DAQ'
#             channel: '/Pressure1and2/line2'
#             type: 'do'
#         valveB:
#             device: 'DAQ'
#             channel: '/Pressure1and2/line3'
#             type: 'do'


# Pressure3:
#     driver: 'DAQGeneric'
#     channels:
#         pressure:
#             device: 'DAQ'
#             channel: '/Pressure3and4/ao0'
#             type: 'ao'
#             holding: 0.0
#             scale: 0.5
#             offset: -5.0
#             units: 'PSI'
#         valveA:
#             device: 'DAQ'
#             channel: '/Pressure3and4/line0'
#             type: 'do'
#         valveB:
#             device: 'DAQ'
#             channel: '/Pressure3and4/line1'
#             type: 'do'


# Pressure4:
#     driver: 'DAQGeneric'
#     channels:
#         pressure:
#             device: 'DAQ'
#             channel: '/Pressure3and4/ao1'
#             type: 'ao'
#             holding: 0.0
#             scale: 0.5
#             offset: -5.0
#             units: 'PSI'
#         valveA:
#             device: 'DAQ'
#             channel: '/Pressure3and4/line2'
#             type: 'do'
#         valveB:
#             device: 'DAQ'
#             channel: '/Pressure3and4/line3'
#             type: 'do'


# Pressure5:
#     driver: 'DAQGeneric'
#     channels:
#         pressure:
#             device: 'DAQ'
#             channel: '/Pressure5and6/ao0'
#             type: 'ao'
#             holding: 0.0
#             scale: 0.5
#             offset: -5.0
#             units: 'PSI'
#         valveA:
#             device: 'DAQ'
#             channel: '/Pressure5and6/line0'
#             type: 'do'
#         valveB:
#             device: 'DAQ'
#             channel: '/Pressure5and6/line1'
#             type: 'do'


# Pressure6:
#     driver: 'DAQGeneric'
#     channels:
#         pressure:
#             device: 'DAQ'
#             channel: '/Pressure5and6/ao1'
#             type: 'ao'
#             holding: 0.0
#             scale: 0.5
#             offset: -5.0
#             units: 'PSI'
#         valveA:
#             device: 'DAQ'
#             channel: '/Pressure5and6/line2'
#             type: 'do'
#         valveB:
#             device: 'DAQ'
#             channel: '/Pressure5and6/line3'
#             type: 'do'


# Pressure7:
#     driver: 'DAQGeneric'
#     channels:
#         pressure:
#             device: 'DAQ'
#             channel: '/Pressure7and8/ao0'
#             type: 'ao'
#             holding: 0.0
#             scale: 0.5
#             offset: -5.0
#             units: 'PSI'
#         valveA:
#             device: 'DAQ'
#             channel: '/Pressure7and8/line0'
#             type: 'do'
#         valveB:
#             device: 'DAQ'
#             channel: '/Pressure7and8/line1'
#             type: 'do'


# Pressure8:
#     driver: 'DAQGeneric'
#     channels:
#         pressure:
#             device: 'DAQ'
#             channel: '/Pressure7and8/ao1'
#             type: 'ao'
#             holding: 0.0
#             scale: 0.5
#             offset: -5.0
#             units: 'PSI'
#         valveA:
#             device: 'DAQ'
#             channel: '/Pressure7and8/line2'
#             type: 'do'
#         valveB:
#             device: 'DAQ'
#             channel: '/Pressure7and8/line3'
#             type: 'do'


# Pressure9:
#     driver: 'DAQGeneric'
#     channels:
#         pressure:
#             device: 'DAQ'
#             channel: '/Pressure9and10/ao0'
#             type: 'ao'
#             holding: 0.0
#             scale: 0.5
#             offset: -5.0
#             units: 'PSI'
#         valveA:
#             device: 'DAQ'
#             channel: '/Pressure9and10/line0'
#             type: 'do'
#         valveB:
#             device: 'DAQ'
#             channel: '/Pressure9and10/line1'
#             type: 'do'


# Pressure10:
#     driver: 'DAQGeneric'
#     channels:
#         pressure:
#             device: 'DAQ'
#             channel: '/Pressure9and10/ao1'
#             type: 'ao'
#             holding: 0.0
#             scale: 0.5
#             offset: -5.0
#             units: 'PSI'
#         valveA:
#             device: 'DAQ'
#             channel: '/Pressure9and10/line2'
#             type: 'do'
#         valveB:
#             device: 'DAQ'
#             channel: '/Pressure9and10/line3'
#             type: 'do'


# Pressure11:
#     driver: 'DAQGeneric'
#     channels:
#         pressure:
#             device: 'DAQ'
#             channel: '/Pressure11and12/ao0'
#             type: 'ao'
#             holding: 0.0
#             scale: 0.5
#             offset: -5.0
#             units: 'PSI'
#         valveA:
#             device: 'DAQ'
#             channel: '/Pressure11and12/line0'
#             type: 'do'
#         valveB:
#             device: 'DAQ'
#             channel: '/Pressure11and12/line1'
#             type: 'do'


# Pressure12:
#     driver: 'DAQGeneric'
#     channels:
#         pressure:
#             device: 'DAQ'
#             channel: '/Pressure11and12/ao1'
#             type: 'ao'
#             holding: 0.0
#             scale: 0.5
#             offset: -5.0
#             units: 'PSI'
#         valveA:
#             device: 'DAQ'
#             channel: '/Pressure11and12/line2'
#             type: 'do'
#         valveB:
#             device: 'DAQ'
#             channel: '/Pressure11and12/line3'
#             type: 'do'





Sensapex1:
    driver: 'Sensapex'
    deviceId: 1   # the manipulator number that appears on the touchscreen controller
    xPitch: 0    # angle of the x axis (in degrees) relative to horizontal
    scale: 1e-9, 1e-9, -1e-9  # scale nm->m and flip z axis so +z points upward
    slowSpeed: 200e-6  # uMp has trouble moving slowly
    fastSpeed: 3e-3
    imagingDevice: 'Camera'  # which imaging device to use for calibration

Pipette1:
    driver: 'Pipette'
    parentDevice: 'Sensapex1'
    imagingDevice: 'Camera'  # which imaging device to use for calibration and focus control
    searchHeight: 1*mm
    searchTipHeight: 1*mm
    pitch: 30   # angle of pipette relative to parent x axis

PatchPipette1:
    driver: 'PatchPipette'
    pipetteDevice: 'Pipette1'
    clampDevice: 'Clamp1'
    pressureDevice: 'Pressure1'



Sensapex2:
    driver: 'Sensapex'
    deviceId: 2   # the manipulator number that appears on the touchscreen controller
    xPitch: 0    # angle of the x axis (in degrees) relative to horizontal
    scale: 1e-9, 1e-9, -1e-9  # scale nm->m and flip z axis so +z points upward
    slowSpeed: 200e-6  # uMp has trouble moving slowly
    fastSpeed: 3e-3
    imagingDevice: 'Camera'  # which imaging device to use for calibration

Pipette2:
    driver: 'Pipette'
    parentDevice: 'Sensapex2'
    imagingDevice: 'Camera'  # which imaging device to use for calibration and focus control
    searchHeight: 1*mm
    searchTipHeight: 1*mm
    pitch: 30   # angle of pipette relative to parent x axis

PatchPipette2:
    driver: 'PatchPipette'
    pipetteDevice: 'Pipette2'
    clampDevice: 'Clamp2'
    pressureDevice: 'Pressure2'


# MS1:
#     driver: 'Scientifica'
#     name: 'MicroStar 1'
#     baudrate: 38400
#     pitch: 28
#     scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
#     fastSpeed: 1e-3  # slipping at 3mm/s
#     userSpeed: 1e-3
#     params:
#         currents: 230, 220  # be careful to follow manufacturer specs!
#         axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
#         joyDirectionX: False
#         joyDirectionY: False
#         joyDirectionZ: False
#         minSpeed: 1000
#         accel: 500
#         joySlowScale: 4
#         joyFastScale: 80
#         joyAccel: 500

# MS2:
#     driver: 'Scientifica'
#     name: 'MicroStar 2'
#     baudrate: 38400
#     pitch: 28
#     scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
#     fastSpeed: 3e-3
#     userSpeed: 3e-3
#     params:
#         currents: 230, 220  # be careful to follow manufacturer specs!
#         axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
#         joyDirectionX: False
#         joyDirectionY: False
#         joyDirectionZ: False
#         minSpeed: 1000
#         accel: 500
#         joySlowScale: 4
#         joyFastScale: 80
#         joyAccel: 500

# MS3:
#     driver: 'Scientifica'
#     name: 'MicroStar 3'
#     baudrate: 38400
#     pitch: 28
#     scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
#     fastSpeed: 2e-3  # fails @ 4mm/s
#     userSpeed: 2e-3
#     params:
#         currents: 230, 220  # be careful to follow manufacturer specs!
#         axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
#         joyDirectionX: False
#         joyDirectionY: False
#         joyDirectionZ: False
#         minSpeed: 1000
#         accel: 500
#         joySlowScale: 4
#         joyFastScale: 80
#         joyAccel: 500

# MS4:
#     driver: 'Scientifica'
#     name: 'MicroStar 4'
#     baudrate: 38400
#     pitch: 28
#     scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
#     fastSpeed: 3e-3
#     userSpeed: 3e-3
#     params:
#         currents: 230, 220  # be careful to follow manufacturer specs!
#         axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
#         joyDirectionX: False
#         joyDirectionY: False
#         joyDirectionZ: False
#         minSpeed: 1000
#         accel: 500
#         joySlowScale: 4
#         joyFastScale: 80
#         joyAccel: 500

# MS5:
#     driver: 'Scientifica'
#     name: 'MicroStar 5'
#     baudrate: 38400
#     pitch: 28
#     scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
#     fastSpeed: 3e-3
#     userSpeed: 3e-3
#     params:
#         currents: 230, 220  # be careful to follow manufacturer specs!
#         axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
#         joyDirectionX: False
#         joyDirectionY: False
#         joyDirectionZ: False
#         minSpeed: 1000
#         accel: 500
#         joySlowScale: 4
#         joyFastScale: 80
#         joyAccel: 500

# MS6:
#     driver: 'Scientifica'
#     name: 'MicroStar 6'
#     baudrate: 38400
#     pitch: 28
#     scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
#     fastSpeed: 3e-3
#     userSpeed: 3e-3
#     params:
#         currents: 230, 220  # be careful to follow manufacturer specs!
#         axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
#         joyDirectionX: False
#         joyDirectionY: False
#         joyDirectionZ: False
#         minSpeed: 1000
#         accel: 500
#         joySlowScale: 4
#         joyFastScale: 80
#         joyAccel: 500

# MS7:
#     driver: 'Scientifica'
#     name: 'MicroStar 7'
#     baudrate: 38400
#     pitch: 28
#     scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
#     fastSpeed: 3e-3
#     userSpeed: 3e-3
#     params:
#         currents: 230, 220  # be careful to follow manufacturer specs!
#         axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
#         joyDirectionX: False
#         joyDirectionY: False
#         joyDirectionZ: False
#         minSpeed: 1000
#         accel: 500
#         joySlowScale: 4
#         joyFastScale: 80
#         joyAccel: 500

# MS8:
#     driver: 'Scientifica'
#     name: 'MicroStar 8'
#     baudrate: 38400
#     pitch: 28
#     scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
#     fastSpeed: 3e-3
#     userSpeed: 3e-3
#     params:
#         currents: 230, 220  # be careful to follow manufacturer specs!
#         axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
#         joyDirectionX: False
#         joyDirectionY: False
#         joyDirectionZ: False
#         minSpeed: 1000
#         accel: 500
#         joySlowScale: 4
#         joyFastScale: 80
#         joyAccel: 500

# MS9:
#     driver: 'Scientifica'
#     name: 'MicroStar 9'
#     baudrate: 38400
#     pitch: 28
#     scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
#     fastSpeed: 3e-3
#     userSpeed: 3e-3
#     params:
#         currents: 230, 220  # be careful to follow manufacturer specs!
#         axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
#         joyDirectionX: False
#         joyDirectionY: False
#         joyDirectionZ: False
#         minSpeed: 1000
#         accel: 500
#         joySlowScale: 4
#         joyFastScale: 80
#         joyAccel: 500

# MS10:
#     driver: 'Scientifica'
#     name: 'MicroStar 10'
#     baudrate: 38400
#     pitch: 28
#     scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
#     fastSpeed: 3e-3
#     userSpeed: 3e-3
#     params:
#         currents: 230, 220  # be careful to follow manufacturer specs!
#         axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
#         joyDirectionX: False
#         joyDirectionY: False
#         joyDirectionZ: False
#         minSpeed: 1000
#         accel: 500
#         joySlowScale: 4
#         joyFastScale: 80
#         joyAccel: 500

# MS11:
#     driver: 'Scientifica'
#     name: 'MicroStar 11'
#     baudrate: 38400
#     pitch: 28
#     scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
#     fastSpeed: 2e-3  # this manipulator fails @ 5mm/s
#     userSpeed: 2e-3
#     params:
#         currents: 230, 220  # be careful to follow manufacturer specs!
#         axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
#         joyDirectionX: False
#         joyDirectionY: False
#         joyDirectionZ: False
#         minSpeed: 1000
#         accel: 500
#         joySlowScale: 4
#         joyFastScale: 80
#         joyAccel: 500

# MS12:
#     driver: 'Scientifica'
#     name: 'MicroStar 12'
#     baudrate: 38400
#     pitch: 28
#     scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
#     fastSpeed: 1e-3  # this manipulator fails @ 3mm/s
#     userSpeed: 1e-3
#     params:
#         currents: 230, 220  # be careful to follow manufacturer specs!
#         axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
#         joyDirectionX: False
#         joyDirectionY: False
#         joyDirectionZ: False
#         minSpeed: 1000
#         accel: 500
#         joySlowScale: 4
#         joyFastScale: 80
#         joyAccel: 500

# Pipette1:
#     driver: 'Pipette'
#     parentDevice: 'MS1'
#     scopeDevice: 'Microscope'
#     searchHeight: 1*mm
#     searchTipHeight: 1*mm

# Pipette2:
#     driver: 'MIESPatchPipette'
#     headstage: 0
#     parentDevice: 'MS2'
#     scopeDevice: 'Microscope'
#     searchHeight: 1*mm
#     searchTipHeight: 1*mm

# Pipette3:
#     driver: 'MIESPatchPipette'
#     headstage: 1
#     parentDevice: 'MS3'
#     scopeDevice: 'Microscope'
#     searchHeight: 1*mm
#     searchTipHeight: 1*mm

# Pipette4:
#     driver: 'MIESPatchPipette'
#     headstage: 2
#     parentDevice: 'MS4'
#     scopeDevice: 'Microscope'
#     searchHeight: 1*mm
#     searchTipHeight: 1*mm

# Pipette5:
#     driver: 'MIESPatchPipette'
#     headstage: 3
#     parentDevice: 'Sensapex1'
#     scopeDevice: 'Microscope'
#     searchHeight: 1*mm
#     searchTipHeight: 1*mm

# Pipette5:
#     driver: 'MIESPatchPipette'
#     headstage: 3
#     parentDevice: 'MS5'
#     scopeDevice: 'Microscope'
#     searchHeight: 1*mm
#     searchTipHeight: 1*mm

# Pipette6:
#     driver: 'Pipette'
#     parentDevice: 'MS6'
#     scopeDevice: 'Microscope'
#     searchHeight: 1*mm
#     searchTipHeight: 1*mm

# Pipette7:
#     driver: 'Pipette'
#     parentDevice: 'MS7'
#     scopeDevice: 'Microscope'
#     searchHeight: 1*mm
#     searchTipHeight: 1*mm

# Pipette8:
#     driver: 'PatchPipette'
#     headstage: 4
#     clampDevice: 'Clamp1'
#     parentDevice: 'MS8'
#     scopeDevice: 'Microscope'
#     searchHeight: 1*mm
#     searchTipHeight: 1*mm

# Pipette9:
#     driver: 'MIESPatchPipette'
#     headstage: 5
#     parentDevice: 'MS9'
#     scopeDevice: 'Microscope'
#     searchHeight: 1*mm
#     searchTipHeight: 1*mm

# Pipette10:
#     driver: 'MIESPatchPipette'
#     headstage: 6
#     parentDevice: 'MS10'
#     scopeDevice: 'Microscope'
#     searchHeight: 1*mm
#     searchTipHeight: 1*mm

# Pipette11:
#     driver: 'MIESPatchPipette'
#     headstage: 7
#     parentDevice: 'MS11'
#     scopeDevice: 'Microscope'
#     searchHeight: 1*mm
#     searchTipHeight: 1*mm

# Pipette12:
#     driver: 'Pipette'
#     parentDevice: 'MS12'
#     scopeDevice: 'Microscope'
#     searchHeight: 1*mm
#     searchTipHeight: 1*mm
