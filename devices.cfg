# This configuration file defines a set of simulated devices that allow some 
# of ACQ4's acquisition capabilities to be tested on any machine. 
# 
# Also included are example configuration for every type of device supported
# by ACQ4, commented out. These may be used to construct a working 
# device configuration file.



# First, define the NI DAQ device we will use. For use with a real DAQ, simply
# remove the line 'mock: True'. The name 'DAQ', defined here, will appear
# many times throughout the config to refer to this device.
# DAQ:
#     driver: 'NiDAQ'
#     # mock: True
#     # Default mode for AI channels. Options are 'NRSE', 'RSE', and 'DIFF'
#     # This may be overridden for individual channels.
#     defaultAIMode: 'RSE'
#     #defaultAIRange: [0, 5.0]
#     #defaultAORange: [0, 5.0]
        
# A simple device connected to the DAQ that uses one AI channel and one AO 
# channel. As with all of the following device definitions, the name 
# 'DaqDevice' is arbitrary.
#DaqDevice:
#    driver: 'DAQGeneric'
#    channels:
#        AIChan:
#            device: 'DAQ'
#            channel: '/Dev1/ai0'
#            type: 'ai'
#        AOChan:
#            device: 'DAQ'
#            channel: '/Dev1/ao0'
#            type: 'ao'
    
# A simulated patch-clamp amplifier. It is connected to a Hodgkin-Huxley
# neuron model, allowing some of ACQ4's acquisition modules to be tested on
# a "real" system.
#Clamp1:
#    driver: 'MockClamp'
#    simulator: 'builtin'  # Also supports 'neuron' if you have neuron+python
#                            # installed. See lib/devices/MockClamp/neuronSim.py.
#                            
#    # Define two connections to the DAQ:
#    Command:
#        device: 'DAQ'
#        channel: '/Dev1/ao0'
#        type: 'ao'
#    ScaledSignal:
#        device: 'DAQ'
#        channel: '/Dev1/ai5'
#        mode: 'NRSE'
#        type: 'ai'
#        
#    # Default holding values.
#    icHolding: 0.0
#    vcHolding: -65e-3


SliceScope:
    driver: 'Scientifica'
    name: 'SliceScope'
    baudrate: 38400
    scale: -1e-6, -1e-6, 1e-6  # convert um to m
    params:
        currents: 200, 125  # be careful to follow manufacturer specs!
        axisScale: 5.12, -5.12, -6.4  # +x points right, +y points away, +z points up
        joyDirectionX: True
        joyDirectionY: True
        joyDirectionZ: False
        minSpeed: 1000
        maxSpeed: 40000
        accel: 100
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500

Condenser:
    driver: 'Scientifica'
    name: 'Condenser'
    baudrate: 38400
    scale: -1e-6, -1e-6, 1e-6  # convert um to m
    switches:
        # Emit a signal when MOC switches position (x axis crosses position thresholds)
        MOC: ([0.0445, 0.045], None, None)  # 5x: 45.49  40x: 44.08
    params:
        #currents: 200, 125  # be careful to follow manufacturer specs!
        #axisScale: 5.12, -5.12, -6.4  # +x points right, +y points away, +z points up
        #joyDirectionX: True
        #joyDirectionY: True
        #joyDirectionZ: False
        minSpeed: 1000
        maxSpeed: 30000
        accel: 500
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500

# A microscope device, providing a way to inform ACQ4 about the set of 
# objective lenses available and which is currently in use. 
Microscope:
    driver: 'Microscope'
    parentDevice: 'SliceScope'
    objectiveSwitch: 'Condenser', 'MOC'
    objectives:
        0:
            40x_0.8:
                name: '40x 0.8NA LUMPlanFL N'
                scale: 1.0 / 40.0
                offset: 0, 0, 0
            60x_1.0:
                name: '60x 1.0NA LUMPlanFL N'
                scale: 1.0 / 60.0
                offset: 0, 0, 0
            20x_0.5:
                name: '20x 0.5NA UMPlanFL N'
                scale: 1.0 / 20.0
                offset: 0, 0, 0
        1:
            5x_0.1NA:
                name: '5x 0.1NA MPlan N'
                scale: 1.0 / 5.0
                offset: 177*um, -190*um, -7.14*mm


#Scanner:
#    driver: 'Scanner'
#    parentDevice: 'Microscope'
#    XAxis:
#        device: 'DAQ'
#        channel: '/Dev1/ao0'
#        type: 'ao'
#    YAxis:
#        device: 'DAQ'
#        channel: '/Dev1/ao1'
#        type: 'ao'
#    defaultCamera: "Camera"
#    defaultLaser: "Laser"
#    commandLimits: -1.5, 1.5

#Scanner-raw:
#    driver: 'DAQGeneric'
#    channels:
#        XAxis:
#            device: 'DAQ'
#            channel: '/Dev1/ao0'
#            type: 'ao'
#        YAxis:
#            device: 'DAQ'
#            channel: '/Dev1/ao1'
#            type: 'ao'

#Laser-473:
#    driver: 'Laser'
#    parentDevice: 'Microscope'
#    pulseRate: 100*kHz                      ## Laser's pulse rate
#    power: 100*mW
#    shutter:
#        device: 'DAQ'
#        channel: '/Dev1/line0'           ## channel for triggering shutter
#        type: 'do'
#        delay: 10*ms                      ## how long it takes the shutter to fully open
#    wavelength: 355*nm
#    alignmentMode:
#        shutter: True


#Clamp1:
#    driver: 'MultiClamp'
#    pythonExecutable: 'c:\\Anaconda2-32\\python.exe'
#    channelID: 'model:MC700B,sn:00834228,chan:1'
#    commandChannel: 
#        device: 'DAQ'
#        channel: '/Dev1/ao0'
#        type: 'ao'
#    primaryChannel: 
#        device: 'DAQ'
#        channel: '/Dev1/ai0'
#        mode: 'RSE'
#        type: 'ai'
#    secondaryChannel: 
#        device: 'DAQ'
#        channel: '/Dev1/ai1'
#        mode: 'RSE'
#        type: 'ai'
#    vcHolding: -65e-3
#    icHolding: 0.0


# TempController:
#     driver: 'DAQGeneric'
#     channels:
#         BathTemp:
#             device: 'DAQ'
#             channel: '/Dev1/ao0'
#             type: 'ao'
#             units: 'V'
#             #scale: 10 * mV / C

# Photometrics Kino (disabled)
#Camera:
#    driver: 'PVCam'
#    serial: 'PMUSBCam00'
#    parentDevice: 'Microscope'          ## tells us that the camera is rigidly connected to the scope, and
#                                        ##   thus will inherit its transformations.
#    transform:                          ## transform defines the relationship between the camera's
#                                        ##   sensor coordinate system (top-left is usually 0,0 and
#                                        ##   pixels are 1 unit wide) and the coordinate system of its
#                                        ##   parentDevice. This is where we would rotate/flip the camera if needed.
#        pos: (0, 0)
#        scale: (4.48 * um/px, -4.48 * um/px)
#        angle: 0
#    params:                             ## default parameters to apply to camera at startup
#        #TEMP_SETPOINT:  -2000
#        exposure: 10e-3
#        binning: 4,4    

# Hamamatsu Orca
Camera:
    driver: 'MicroManagerCamera'
    mmAdapterName: 'HamamatsuHam'
    mmDeviceName: 'HamamatsuHam_DCAM'
    parentDevice: 'Microscope'
    transform:
        pos: (0, 0)
        scale: (4.088 / 0.63 * um/px, -4.088 / 0.63 * um/px)
        angle: 0
    params:                             ## default parameters to apply to camera at startup
        #TEMP_SETPOINT:  -2000
        exposure: 30e-3
        binning: 2,2
    #exposeChannel:                                 ## Channel for recording expose signal
    #    device: 'DAQ'
    #    channel: '/Dev2/port0/line0'
    #    type: 'di'

#Pixelfly:
#    driver: 'MicroManagerCamera'
#    mmAdapterName: 'PCO_Camera'
#    mmDeviceName: 'pco_camera'
#    parentDevice: 'Microscope'
#    transform:
#        pos: (0, 0)
#        scale: (6.45 * um/px, -6.45 * um/px)
#        angle: 0

#PatchStar:
#    driver: 'Scientifica'
#    port: 'com109'
#    pitch: 24
#    scale: -1e-6, 1e-6, 1e-6  # convert um to m, +z points up
#    params:
#        #currents: 230, 220  # be careful to follow manufacturer specs!
#        axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
#        joyDirectionX: True
#        joyDirectionY: False
#        joyDirectionZ: True
#        minSpeed: 1000
#        accel: 500
#        joySlowScale: 4
#        joyFastScale: 80
#        joyAccel: 500

#PatchStarPipette:
#    driver: 'Pipette'
#    parentDevice: 'PatchStar'
#    scopeDevice: 'Microscope'
#    searchHeight: 1*mm

# Sensapex1:
#     driver: 'Sensapex'
#     deviceId: 1
#     xPitch: 30
#     scale: 1e-9, 1e-9, -1e-9

# SensapexPipette1:
#     driver: 'Pipette'
#     parentDevice: 'Sensapex1'
#     scopeDevice: 'Microscope'

# Sensapex2:
#     driver: 'Sensapex'
#     deviceId: 2
#     xPitch: 30

# SensapexPipette2:
#     driver: 'Pipette'
#     parentDevice: 'Sensapex2'

MS1:
    driver: 'Scientifica'
    name: 'MicroStar 1'
    baudrate: 38400
    pitch: 28
    scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
    fastSpeed: 1e-3  # slipping at 3mm/s
    userSpeed: 1e-3
    params:
        currents: 230, 220  # be careful to follow manufacturer specs!
        axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
        joyDirectionX: False
        joyDirectionY: False
        joyDirectionZ: False
        minSpeed: 1000
        accel: 500
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500

MS2:
    driver: 'Scientifica'
    name: 'MicroStar 2'
    baudrate: 38400
    pitch: 28
    scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
    fastSpeed: 3e-3
    userSpeed: 3e-3
    params:
        currents: 230, 220  # be careful to follow manufacturer specs!
        axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
        joyDirectionX: False
        joyDirectionY: False
        joyDirectionZ: False
        minSpeed: 1000
        accel: 500
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500

MS3:
    driver: 'Scientifica'
    name: 'MicroStar 3'
    baudrate: 38400
    pitch: 28
    scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
    fastSpeed: 2e-3  # fails @ 4mm/s
    userSpeed: 2e-3
    params:
        currents: 230, 220  # be careful to follow manufacturer specs!
        axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
        joyDirectionX: False
        joyDirectionY: False
        joyDirectionZ: False
        minSpeed: 1000
        accel: 500
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500

MS4:
    driver: 'Scientifica'
    name: 'MicroStar 4'
    baudrate: 38400
    pitch: 28
    scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
    fastSpeed: 3e-3
    userSpeed: 3e-3
    params:
        currents: 230, 220  # be careful to follow manufacturer specs!
        axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
        joyDirectionX: False
        joyDirectionY: False
        joyDirectionZ: False
        minSpeed: 1000
        accel: 500
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500

MS5:
    driver: 'Scientifica'
    name: 'MicroStar 5'
    baudrate: 38400
    pitch: 28
    scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
    fastSpeed: 3e-3
    userSpeed: 3e-3
    params:
        currents: 230, 220  # be careful to follow manufacturer specs!
        axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
        joyDirectionX: False
        joyDirectionY: False
        joyDirectionZ: False
        minSpeed: 1000
        accel: 500
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500

MS6:
    driver: 'Scientifica'
    name: 'MicroStar 6'
    baudrate: 38400
    pitch: 28
    scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
    fastSpeed: 3e-3
    userSpeed: 3e-3
    params:
        currents: 230, 220  # be careful to follow manufacturer specs!
        axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
        joyDirectionX: False
        joyDirectionY: False
        joyDirectionZ: False
        minSpeed: 1000
        accel: 500
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500

MS7:
    driver: 'Scientifica'
    name: 'MicroStar 7'
    baudrate: 38400
    pitch: 28
    scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
    fastSpeed: 3e-3
    userSpeed: 3e-3
    params:
        currents: 230, 220  # be careful to follow manufacturer specs!
        axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
        joyDirectionX: False
        joyDirectionY: False
        joyDirectionZ: False
        minSpeed: 1000
        accel: 500
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500

MS8:
    driver: 'Scientifica'
    name: 'MicroStar 8'
    baudrate: 38400
    pitch: 28
    scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
    fastSpeed: 3e-3
    userSpeed: 3e-3
    params:
        currents: 230, 220  # be careful to follow manufacturer specs!
        axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
        joyDirectionX: False
        joyDirectionY: False
        joyDirectionZ: False
        minSpeed: 1000
        accel: 500
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500

MS9:
    driver: 'Scientifica'
    name: 'MicroStar 9'
    baudrate: 38400
    pitch: 28
    scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
    fastSpeed: 3e-3
    userSpeed: 3e-3
    params:
        currents: 230, 220  # be careful to follow manufacturer specs!
        axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
        joyDirectionX: False
        joyDirectionY: False
        joyDirectionZ: False
        minSpeed: 1000
        accel: 500
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500

MS10:
    driver: 'Scientifica'
    name: 'MicroStar 10'
    baudrate: 38400
    pitch: 28
    scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
    fastSpeed: 3e-3
    userSpeed: 3e-3
    params:
        currents: 230, 220  # be careful to follow manufacturer specs!
        axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
        joyDirectionX: False
        joyDirectionY: False
        joyDirectionZ: False
        minSpeed: 1000
        accel: 500
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500

MS11:
    driver: 'Scientifica'
    name: 'MicroStar 11'
    baudrate: 38400
    pitch: 28
    scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
    fastSpeed: 2e-3  # this manipulator fails @ 5mm/s
    userSpeed: 2e-3
    params:
        currents: 230, 220  # be careful to follow manufacturer specs!
        axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
        joyDirectionX: False
        joyDirectionY: False
        joyDirectionZ: False
        minSpeed: 1000
        accel: 500
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500

MS12:
    driver: 'Scientifica'
    name: 'MicroStar 12'
    baudrate: 38400
    pitch: 28
    scale: 1e-6, 1e-6, -1e-6  # convert um to m, +z points up
    fastSpeed: 1e-3  # this manipulator fails @ 3mm/s
    userSpeed: 1e-3
    params:
        currents: 230, 220  # be careful to follow manufacturer specs!
        axisScale: -6.4, -6.4, -6.4  # need negative z value to get correct approach angle
        joyDirectionX: False
        joyDirectionY: False
        joyDirectionZ: False
        minSpeed: 1000
        accel: 500
        joySlowScale: 4
        joyFastScale: 80
        joyAccel: 500

Pipette1:
    driver: 'Pipette'
    parentDevice: 'MS1'
    scopeDevice: 'Microscope'
    searchHeight: 1*mm
    searchTipHeight: 1*mm

Pipette2:
    driver: 'MIESPatchPipette'
    headstage: 0
    parentDevice: 'MS2'
    scopeDevice: 'Microscope'
    searchHeight: 1*mm
    searchTipHeight: 1*mm

Pipette3:
    driver: 'MIESPatchPipette'
    headstage: 1
    parentDevice: 'MS3'
    scopeDevice: 'Microscope'
    searchHeight: 1*mm
    searchTipHeight: 1*mm

Pipette4:
    driver: 'MIESPatchPipette'
    headstage: 2
    parentDevice: 'MS4'
    scopeDevice: 'Microscope'
    searchHeight: 1*mm
    searchTipHeight: 1*mm

Pipette5:
    driver: 'MIESPatchPipette'
    headstage: 3
    parentDevice: 'Sensapex1'
    scopeDevice: 'Microscope'
    searchHeight: 1*mm
    searchTipHeight: 1*mm

Pipette5:
    driver: 'MIESPatchPipette'
    headstage: 3
    parentDevice: 'MS5'
    scopeDevice: 'Microscope'
    searchHeight: 1*mm
    searchTipHeight: 1*mm

Pipette6:
    driver: 'Pipette'
    parentDevice: 'MS6'
    scopeDevice: 'Microscope'
    searchHeight: 1*mm
    searchTipHeight: 1*mm

Pipette7:
    driver: 'Pipette'
    parentDevice: 'MS7'
    scopeDevice: 'Microscope'
    searchHeight: 1*mm
    searchTipHeight: 1*mm

Pipette8:
    driver: 'MIESPatchPipette'
    headstage: 4
    parentDevice: 'MS8'
    scopeDevice: 'Microscope'
    searchHeight: 1*mm
    searchTipHeight: 1*mm

Pipette9:
    driver: 'MIESPatchPipette'
    headstage: 5
    parentDevice: 'MS9'
    scopeDevice: 'Microscope'
    searchHeight: 1*mm
    searchTipHeight: 1*mm

Pipette10:
    driver: 'MIESPatchPipette'
    headstage: 6
    parentDevice: 'MS10'
    scopeDevice: 'Microscope'
    searchHeight: 1*mm
    searchTipHeight: 1*mm

Pipette11:
    driver: 'MIESPatchPipette'
    headstage: 7
    parentDevice: 'MS11'
    scopeDevice: 'Microscope'
    searchHeight: 1*mm
    searchTipHeight: 1*mm

Pipette12:
    driver: 'Pipette'
    parentDevice: 'MS12'
    scopeDevice: 'Microscope'
    searchHeight: 1*mm
    searchTipHeight: 1*mm


XKE128:
    driver: 'XKeys'
    index: 1
